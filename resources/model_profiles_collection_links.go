/*
Chains lab profile service

profile service docs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProfilesCollectionLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfilesCollectionLinks{}

// ProfilesCollectionLinks struct for ProfilesCollectionLinks
type ProfilesCollectionLinks struct {
	// The current page number.
	PageNumber int64 `json:"page_number"`
	// The number of items per page.
	PageSize int64 `json:"page_size"`
	// The total number of items available.
	TotalItems int64 `json:"total_items"`
}

type _ProfilesCollectionLinks ProfilesCollectionLinks

// NewProfilesCollectionLinks instantiates a new ProfilesCollectionLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfilesCollectionLinks(pageNumber int64, pageSize int64, totalItems int64) *ProfilesCollectionLinks {
	this := ProfilesCollectionLinks{}
	this.PageNumber = pageNumber
	this.PageSize = pageSize
	this.TotalItems = totalItems
	return &this
}

// NewProfilesCollectionLinksWithDefaults instantiates a new ProfilesCollectionLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfilesCollectionLinksWithDefaults() *ProfilesCollectionLinks {
	this := ProfilesCollectionLinks{}
	return &this
}

// GetPageNumber returns the PageNumber field value
func (o *ProfilesCollectionLinks) GetPageNumber() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value
// and a boolean to check if the value has been set.
func (o *ProfilesCollectionLinks) GetPageNumberOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageNumber, true
}

// SetPageNumber sets field value
func (o *ProfilesCollectionLinks) SetPageNumber(v int64) {
	o.PageNumber = v
}

// GetPageSize returns the PageSize field value
func (o *ProfilesCollectionLinks) GetPageSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *ProfilesCollectionLinks) GetPageSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *ProfilesCollectionLinks) SetPageSize(v int64) {
	o.PageSize = v
}

// GetTotalItems returns the TotalItems field value
func (o *ProfilesCollectionLinks) GetTotalItems() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalItems
}

// GetTotalItemsOk returns a tuple with the TotalItems field value
// and a boolean to check if the value has been set.
func (o *ProfilesCollectionLinks) GetTotalItemsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalItems, true
}

// SetTotalItems sets field value
func (o *ProfilesCollectionLinks) SetTotalItems(v int64) {
	o.TotalItems = v
}

func (o ProfilesCollectionLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfilesCollectionLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["page_number"] = o.PageNumber
	toSerialize["page_size"] = o.PageSize
	toSerialize["total_items"] = o.TotalItems
	return toSerialize, nil
}

func (o *ProfilesCollectionLinks) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"page_number",
		"page_size",
		"total_items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProfilesCollectionLinks := _ProfilesCollectionLinks{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProfilesCollectionLinks)

	if err != nil {
		return err
	}

	*o = ProfilesCollectionLinks(varProfilesCollectionLinks)

	return err
}

type NullableProfilesCollectionLinks struct {
	value *ProfilesCollectionLinks
	isSet bool
}

func (v NullableProfilesCollectionLinks) Get() *ProfilesCollectionLinks {
	return v.value
}

func (v *NullableProfilesCollectionLinks) Set(val *ProfilesCollectionLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableProfilesCollectionLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableProfilesCollectionLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfilesCollectionLinks(val *ProfilesCollectionLinks) *NullableProfilesCollectionLinks {
	return &NullableProfilesCollectionLinks{value: val, isSet: true}
}

func (v NullableProfilesCollectionLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfilesCollectionLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


