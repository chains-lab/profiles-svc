/*
Chains lab profile service

profile service docs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the UpdateBirthDateDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateBirthDateDataAttributes{}

// UpdateBirthDateDataAttributes struct for UpdateBirthDateDataAttributes
type UpdateBirthDateDataAttributes struct {
	// birth date user
	BirthDate time.Time `json:"birth_date" validate:"regexp=DD-MM-YYYY"`
}

type _UpdateBirthDateDataAttributes UpdateBirthDateDataAttributes

// NewUpdateBirthDateDataAttributes instantiates a new UpdateBirthDateDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateBirthDateDataAttributes(birthDate time.Time) *UpdateBirthDateDataAttributes {
	this := UpdateBirthDateDataAttributes{}
	this.BirthDate = birthDate
	return &this
}

// NewUpdateBirthDateDataAttributesWithDefaults instantiates a new UpdateBirthDateDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateBirthDateDataAttributesWithDefaults() *UpdateBirthDateDataAttributes {
	this := UpdateBirthDateDataAttributes{}
	return &this
}

// GetBirthDate returns the BirthDate field value
func (o *UpdateBirthDateDataAttributes) GetBirthDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.BirthDate
}

// GetBirthDateOk returns a tuple with the BirthDate field value
// and a boolean to check if the value has been set.
func (o *UpdateBirthDateDataAttributes) GetBirthDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BirthDate, true
}

// SetBirthDate sets field value
func (o *UpdateBirthDateDataAttributes) SetBirthDate(v time.Time) {
	o.BirthDate = v
}

func (o UpdateBirthDateDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateBirthDateDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["birth_date"] = o.BirthDate
	return toSerialize, nil
}

func (o *UpdateBirthDateDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"birth_date",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateBirthDateDataAttributes := _UpdateBirthDateDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateBirthDateDataAttributes)

	if err != nil {
		return err
	}

	*o = UpdateBirthDateDataAttributes(varUpdateBirthDateDataAttributes)

	return err
}

type NullableUpdateBirthDateDataAttributes struct {
	value *UpdateBirthDateDataAttributes
	isSet bool
}

func (v NullableUpdateBirthDateDataAttributes) Get() *UpdateBirthDateDataAttributes {
	return v.value
}

func (v *NullableUpdateBirthDateDataAttributes) Set(val *UpdateBirthDateDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateBirthDateDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateBirthDateDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateBirthDateDataAttributes(val *UpdateBirthDateDataAttributes) *NullableUpdateBirthDateDataAttributes {
	return &NullableUpdateBirthDateDataAttributes{value: val, isSet: true}
}

func (v NullableUpdateBirthDateDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateBirthDateDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


