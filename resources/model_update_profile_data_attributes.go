/*
Chains lab profile service

profile service docs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"time"
)

// checks if the UpdateProfileDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProfileDataAttributes{}

// UpdateProfileDataAttributes struct for UpdateProfileDataAttributes
type UpdateProfileDataAttributes struct {
	// Pseudonym
	Pseudonym *string `json:"pseudonym,omitempty"`
	// Description
	Description *string `json:"description,omitempty"`
	// Avatar URL
	Avatar *string `json:"avatar,omitempty"`
	// sex prikin'
	Sex *string `json:"sex,omitempty"`
	// Birthday
	Birthdate *time.Time `json:"birthdate,omitempty"`
}

// NewUpdateProfileDataAttributes instantiates a new UpdateProfileDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProfileDataAttributes() *UpdateProfileDataAttributes {
	this := UpdateProfileDataAttributes{}
	return &this
}

// NewUpdateProfileDataAttributesWithDefaults instantiates a new UpdateProfileDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProfileDataAttributesWithDefaults() *UpdateProfileDataAttributes {
	this := UpdateProfileDataAttributes{}
	return &this
}

// GetPseudonym returns the Pseudonym field value if set, zero value otherwise.
func (o *UpdateProfileDataAttributes) GetPseudonym() string {
	if o == nil || IsNil(o.Pseudonym) {
		var ret string
		return ret
	}
	return *o.Pseudonym
}

// GetPseudonymOk returns a tuple with the Pseudonym field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProfileDataAttributes) GetPseudonymOk() (*string, bool) {
	if o == nil || IsNil(o.Pseudonym) {
		return nil, false
	}
	return o.Pseudonym, true
}

// HasPseudonym returns a boolean if a field has been set.
func (o *UpdateProfileDataAttributes) HasPseudonym() bool {
	if o != nil && !IsNil(o.Pseudonym) {
		return true
	}

	return false
}

// SetPseudonym gets a reference to the given string and assigns it to the Pseudonym field.
func (o *UpdateProfileDataAttributes) SetPseudonym(v string) {
	o.Pseudonym = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateProfileDataAttributes) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProfileDataAttributes) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateProfileDataAttributes) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateProfileDataAttributes) SetDescription(v string) {
	o.Description = &v
}

// GetAvatar returns the Avatar field value if set, zero value otherwise.
func (o *UpdateProfileDataAttributes) GetAvatar() string {
	if o == nil || IsNil(o.Avatar) {
		var ret string
		return ret
	}
	return *o.Avatar
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProfileDataAttributes) GetAvatarOk() (*string, bool) {
	if o == nil || IsNil(o.Avatar) {
		return nil, false
	}
	return o.Avatar, true
}

// HasAvatar returns a boolean if a field has been set.
func (o *UpdateProfileDataAttributes) HasAvatar() bool {
	if o != nil && !IsNil(o.Avatar) {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given string and assigns it to the Avatar field.
func (o *UpdateProfileDataAttributes) SetAvatar(v string) {
	o.Avatar = &v
}

// GetSex returns the Sex field value if set, zero value otherwise.
func (o *UpdateProfileDataAttributes) GetSex() string {
	if o == nil || IsNil(o.Sex) {
		var ret string
		return ret
	}
	return *o.Sex
}

// GetSexOk returns a tuple with the Sex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProfileDataAttributes) GetSexOk() (*string, bool) {
	if o == nil || IsNil(o.Sex) {
		return nil, false
	}
	return o.Sex, true
}

// HasSex returns a boolean if a field has been set.
func (o *UpdateProfileDataAttributes) HasSex() bool {
	if o != nil && !IsNil(o.Sex) {
		return true
	}

	return false
}

// SetSex gets a reference to the given string and assigns it to the Sex field.
func (o *UpdateProfileDataAttributes) SetSex(v string) {
	o.Sex = &v
}

// GetBirthdate returns the Birthdate field value if set, zero value otherwise.
func (o *UpdateProfileDataAttributes) GetBirthdate() time.Time {
	if o == nil || IsNil(o.Birthdate) {
		var ret time.Time
		return ret
	}
	return *o.Birthdate
}

// GetBirthdateOk returns a tuple with the Birthdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProfileDataAttributes) GetBirthdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Birthdate) {
		return nil, false
	}
	return o.Birthdate, true
}

// HasBirthdate returns a boolean if a field has been set.
func (o *UpdateProfileDataAttributes) HasBirthdate() bool {
	if o != nil && !IsNil(o.Birthdate) {
		return true
	}

	return false
}

// SetBirthdate gets a reference to the given time.Time and assigns it to the Birthdate field.
func (o *UpdateProfileDataAttributes) SetBirthdate(v time.Time) {
	o.Birthdate = &v
}

func (o UpdateProfileDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProfileDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pseudonym) {
		toSerialize["pseudonym"] = o.Pseudonym
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Avatar) {
		toSerialize["avatar"] = o.Avatar
	}
	if !IsNil(o.Sex) {
		toSerialize["sex"] = o.Sex
	}
	if !IsNil(o.Birthdate) {
		toSerialize["birthdate"] = o.Birthdate
	}
	return toSerialize, nil
}

type NullableUpdateProfileDataAttributes struct {
	value *UpdateProfileDataAttributes
	isSet bool
}

func (v NullableUpdateProfileDataAttributes) Get() *UpdateProfileDataAttributes {
	return v.value
}

func (v *NullableUpdateProfileDataAttributes) Set(val *UpdateProfileDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProfileDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProfileDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProfileDataAttributes(val *UpdateProfileDataAttributes) *NullableUpdateProfileDataAttributes {
	return &NullableUpdateProfileDataAttributes{value: val, isSet: true}
}

func (v NullableUpdateProfileDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProfileDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


